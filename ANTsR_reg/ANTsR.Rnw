\documentclass[11pt]{beamer}
\usetheme{Warsaw}
\usepackage[utf8]{inputenc}
\usepackage{amsmath}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{array}
\usepackage{graphicx}
\author{John Muschelli}
\usepackage{hyperref}
\setbeamertemplate{navigation symbols}{}%remove navigation symbols

\title{Image Processing with ANTsR}
%\setbeamercovered{transparent} 
%\setbeamertemplate{navigation symbols}{} 
%\logo{} 
\institute{Johns Hopkins Bloomberg School of Public Health} 
%\date{} 
%\subject{} 
\setlength{\topsep}{0pt}
\setlength{\parskip}{0pt}
\setlength{\partopsep}{1pt}
\setbeamertemplate{footline}[frame number]

\usepackage[
  natbib = true,
    backend=bibtex,
]{biblatex}
\bibliography{ANTsR}
\AtEveryBibitem{
\clearfield{note}
% \clearlist{address}
% \clearfield{eprint}
% \clearfield{isbn}
% \clearfield{issn}
% \clearlist{location}
% \clearfield{month}
% \clearfield{series}
} % clears language


\newcommand {\framedgraphic}[2] {
    \begin{frame}{#1}
        \begin{center}
            \includegraphics[width=\textwidth,height=0.8\textheight,keepaspectratio]{#2}
        \end{center}
    \end{frame}
}

\begin{document}

\begin{frame}
\titlepage
\end{frame}

%\begin{frame}
%\tableofcontents
%\end{frame}

<<label=opts, results='hide', echo=FALSE, message = FALSE, warning=FALSE>>=
library(knitr)
library(highr)
opts_chunk$set(echo=TRUE, prompt=FALSE, message=FALSE, warning=FALSE, comment="", dev='png', out.height='0.5\\textheight,keepaspectratio',
               out.width='\\textwidth')
knit_hooks$set(inline = function(x) { 
  if (is.numeric(x)) return(knitr:::format_sci(x, 'latex')) 
  hi_latex(x) 
}) 
setwd("~/Dropbox/Neurohacking/ANTsR_reg/")
@


\begin{frame}[fragile]{ANTS and ANTsR}

\begin{itemize}
\item Advanced normalization tools (ANTS) \citep{avants2011reproducible} is state-of-the art software that can perform many neuroimaging-related functions.  
	\begin{itemize}
	\item Collection of routines in C, C++, and some R
	\end{itemize}
\item ANTsR: port of ANTS into R using Rcpp
\item The two functions we focus on are: 
\begin{enumerate}
\item Image inhomogeneity correction (N3 \citep{sled1998nonparametric} and N4 \citep{tustison2010n4itk})
\item Image registration
\end{enumerate} 
\end{itemize}

\end{frame}


\begin{frame}[fragile]{Installing ANTsR}
ANTsR is currently (as of March 23, 2015) hosted on GitHub.  

We will install ANTsR using the \verb|devtools| package.  

Overall, any updates to the install process will be located at \href{https://github.com/stnava/ANTsR}{https://github.com/stnava/ANTsR}.

%This build requires \href{http://www.cmake.org/}{CMake}.

<<install_devtools, eval=FALSE>>=
if (!require(devtools)){
	install.packages('devtools')
}
devtools::install_github("stnava/cmaker")
devtools::install_github("stnava/ITKR")
devtools::install_github("stnava/ANTsR")
@
\end{frame}

\begin{frame}[fragile]{Reading in Images using ANTsR}
Reading in images using ANTsR requires 2 changes compared to \verb|readNIfTI| from \verb|oro.nifti|:
\begin{enumerate}
\item The extension of the filename (e.g. \verb|.nii.gz|) must be specified
\item The dimension of the image (usually 3) must be supplied (could be 2, 3, or 4)
\end{enumerate}

<<read_ants, eval=TRUE>>=
library(ANTsR)
aimg = antsImageRead("Output_3D_File.nii.gz", 
	dimension = 3)
@
\end{frame}


\begin{frame}[fragile]{ANTsR images}

The \verb|aimg| object is an object of \verb|antsImage|, which consists of:
\begin{itemize}
\item pixeltype - how is the image stored (integers versus fractional numbers (floats))
\item dimension - how many dimensions does the image have
\item pointer - where the data is stored
\end{itemize}

<<ants_class, eval=TRUE>>=
class(aimg)
aimg
slotNames(aimg)
@
\end{frame}


\begin{frame}[fragile]{ANTsR images: statistics}

We can still do statistics from an \verb|antsImage|:
<<ants_math, eval=TRUE>>=
mean(aimg)
mean(aimg[aimg!=0])
@
and get the image data from an \verb|antsImage| using \verb|as.array|:

<<ants_array, eval=TRUE>>=
class(as.array(aimg))
@

\end{frame}

\begin{frame}[fragile]{But we discussed nifti objects before!?}

Why discuss the \verb|antsImage| class?

\begin{enumerate}
\item The class can be very fast at performing operations
\item Some ANTsR functions return object of \verb|antsImage| class
\item Some ANTsR functions require an object of \verb|antsImage| class as input
\end{enumerate}

\end{frame}


\begin{frame}[fragile]{Partial Solution: Use extrantsr}

The \verb|extrantsr| (EXTRa ANTsR) package has helper functions to jump \verb|ANTsR| and the \verb|oro.nifti| classes:

Installing \verb|extrantsr|:
<<extrantsr, eval=FALSE>>=
devtools::install_github("muschellij2/extrantsr")
@
<<ants2oro, eval=TRUE>>=
library(extrantsr)
class(nim <- ants2oro(aimg))
@

\end{frame}


\begin{frame}[fragile]{Wrapper functions in extrantsr: Bias Field Correction}

\verb|extrantsr::bias_correct| wraps \verb|n3BiasFieldCorrection| \citep{sled1998nonparametric} and \verb|n4BiasFieldCorrection| \citep{tustison2010n4itk} from \verb|ANTsR| for bias field correction:

<<n3correct, eval=TRUE, cache = TRUE>>=
n3img = bias_correct(nim, correction = "N3", 
	retimg=TRUE)
n4img = bias_correct(nim, correction = "N4", 
	retimg=TRUE)
@
\end{frame}

<<plot_n4, eval=TRUE, echo = FALSE, cache=TRUE, results='hide'>>=
library(oro.nifti)
library(fslr)
png("Orig_Image.png")
orthographic(robust_window(nim), text="Template Image")
dev.off()
png("N4_Image.png")
orthographic(robust_window(n4img), text = "N4 Corrected Image")
dev.off()
@

\begin{frame}[fragile]{Wrapper functions in extrantsr: Bias Field Correction}

\begin{tabular}{cc}
\includegraphics[width=0.5\linewidth]{Orig_Image.png} & \includegraphics[width=0.5\linewidth]{N4_Image.png}
\end{tabular}

\end{frame}

\begin{frame}[fragile]{Wrapper functions in extrantsr: Image Registration}

\begin{itemize}
\item \verb|ANTsR| worker function: \verb|antsRegistration|
\item \verb|extrantsr| worker function: \verb|ants_regwrite|
\end{itemize}
\verb|ants_regwrite| takes in a filename and a template filename, other files (in the same space as filename) to transform to template:
<<image_red, eval=TRUE, cache = TRUE>>=
registered_n4 = ants_regwrite(filename=n4img, 
	template.file = "MNI152_T1_1mm.nii.gz",
	remove.warp = TRUE,
	typeofTransform = "Rigid")
@
\end{frame}

<<plot_images, eval=TRUE, echo = FALSE, cache=TRUE, results='hide'>>=
template = readNIfTI("MNI152_T1_1mm.nii.gz", reorient=FALSE)
png("Template.png")
orthographic(template, text="Template Image")
dev.off()
png("Reg_Image.png")
orthographic(robust_window(registered_n4), text = "Registered N4 Image")
dev.off()
@

\begin{frame}[fragile]{Wrapper functions in extrantsr: Image Registration}

\begin{tabular}{cc}
\includegraphics[width=0.5\linewidth]{Template.png} & \includegraphics[width=0.5\linewidth]{Reg_Image.png}
\end{tabular}

\end{frame}

\begin{frame}[t,allowframebreaks]
  \frametitle{References}
  \printbibliography
 \end{frame}
 
\end{document}